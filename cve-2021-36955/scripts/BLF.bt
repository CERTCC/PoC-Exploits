//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: BLF.bt
//   Authors: 
//   Version: 
//   Purpose: 010 Editor Template for Base Log Files (BLF),
//              used by the Windows CLFS
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------
typedef QWORD ULONGLONG;
typedef QWORD PUCHAR;
typedef DWORD CLFS_CLIENT_ID;

typedef QWORD CLFS_LSN;


typedef struct _CLFS_RECORD_HEADER
{
    UCHAR MajorVersion <format=hex>;
    UCHAR MinorVersion <format=hex>;
    UCHAR Usn <format=hex>;
    UCHAR StreamIndex <format=hex>;
    USHORT TotalSectorCount <format=hex>;
    USHORT ValidSectorCount <format=hex>;
    ULONG Padding;
    ULONG Checksum <format=hex>;
    ULONG Flags;
    ULONG Padding;
    CLFS_LSN CurrentLsn <format=hex>;
    CLFS_LSN NextLsn <format=hex>;
    ULONG RecordOffsets[16];
    ULONG SignaturesOffset;
    ULONG Padding;
} CLFS_RECORD_HEADER;


typedef enum <uint64> _CLFS_METADATA_BLOCK_TYPE
{
    ClfsMetaBlockControl,
    ClfsMetaBlockControlShadow,
    ClfsMetaBlockGeneral,
    ClfsMetaBlockGeneralShadow,
    ClfsMetaBlockScratch,
    ClfsMetaBlockScratchShadow
} CLFS_METADATA_BLOCK_TYPE;

typedef enum _CLFS_EXTEND_STATE
{
    ClfsExtendStateNone,
    ClfsExtendStateExtendingFsd,
    ClfsExtendStateFlushingBlock
} CLFS_EXTEND_STATE;

typedef enum _CLFS_TRUNCATE_STATE
{
    ClfsTruncateStateNone,
    ClfsTruncateStateModifyingStream,
    ClfsTruncateStateSavingOwner,
    ClfsTruncateStateModifyingOwner,
    ClfsTruncateStateSavingDiscardBlock,
    ClfsTruncateStateModifyingDiscardBlock
} CLFS_TRUNCATE_STATE;

typedef struct _CLFS_METADATA_RECORD_HEADER
{
    ULONGLONG ullDumpCount;
} CLFS_METADATA_RECORD_HEADER;

typedef struct _CLFS_METADATA_BLOCK
{
    PUCHAR pbImage <format=hex>;
    ULONG cbImage <format=hex>;
    ULONG cbOffset <format=hex>;
    CLFS_METADATA_BLOCK_TYPE eBlockType;
} CLFS_METADATA_BLOCK;

typedef struct _CLFS_TRUNCATE_CONTEXT
{
    CLFS_TRUNCATE_STATE eTruncateState;
    CLFS_CLIENT_ID cClients;
    CLFS_CLIENT_ID iClient;
    CLFS_LSN lsnOwnerPage;
    CLFS_LSN lsnLastOwnerPage;
    ULONG cInvalidSector;
} CLFS_TRUNCATE_CONTEXT;


typedef struct _CLFS_CONTROL_RECORD
{
    CLFS_METADATA_RECORD_HEADER hdrControlRecord;
    ULONGLONG ullMagicValue <format=hex>;
    UCHAR Version;
    UCHAR cReserved;
    UCHAR cReserved;
    UCHAR cReserved;
    CLFS_EXTEND_STATE eExtendState;
    USHORT iExtendBlock;
    USHORT iFlushBlock;
    ULONG cNewBlockSectors;
    ULONG cExtendStartSectors;
    ULONG cExtendSectors;
    CLFS_TRUNCATE_CONTEXT cxTruncate;
    USHORT cBlocks;
    USHORT cReserved;
    ULONG  cReserved;
    CLFS_METADATA_BLOCK rgBlocks[cBlocks];
} CLFS_CONTROL_RECORD;



CLFS_RECORD_HEADER CRRecordHeader;
CLFS_CONTROL_RECORD ControlRecord;

FSeek(0x400);
CLFS_RECORD_HEADER CRSRecordHeader;
CLFS_CONTROL_RECORD ControlRecordShadow;

FSeek(0x800);
CLFS_RECORD_HEADER GRecordHeader;
